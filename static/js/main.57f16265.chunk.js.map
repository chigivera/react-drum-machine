{"version":3,"sources":["components/DrumPad.jsx","App.js","reportWebVitals.js","index.js"],"names":["DrumPad","_ref","drumKey","src","onClick","React","createElement","className","id","handleClick","concat","App","displayText","setDisplayText","useState","drumpads","name","useEffect","handleKey","event","drumpad","find","pad","key","toUpperCase","Audio","play","document","addEventListener","removeEventListener","map","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"0LAeeA,MAbf,SAAgBC,GAA4B,IAA3BC,QAAEA,EAAOC,IAAEA,EAAGC,QAAEA,GAASH,EAKxC,OACEI,IAAAC,cAAA,OAAKC,UAAU,WAAWC,GAAIN,EAASE,QALrBK,KAClBL,EAAQF,KAKLA,EACDG,IAAAC,cAAA,SAAOC,UAAU,OAAOC,GAAE,GAAAE,OAAKR,EAAO,UAAUC,IAAKA,MC4F5CQ,MAjGf,WACE,MAAOC,EAAaC,GAAkBC,mBAAS,IACzCC,EAAW,CACf,CACEC,KAAK,WACLb,IAAI,2DACJD,QAAQ,KAEV,CACEc,KAAK,WACLb,IAAI,2DACJD,QAAQ,KAEV,CACEc,KAAK,WACLb,IAAI,2DACJD,QAAQ,KAEV,CACEc,KAAK,WACLb,IAAI,6DACJD,QAAQ,KAEV,CACEc,KAAK,OACLb,IAAI,2DACJD,QAAQ,KAEV,CACEc,KAAK,UACLb,IAAI,yDACJD,QAAQ,KAEV,CACEc,KAAK,cACLb,IAAI,yDACJD,QAAQ,KAEV,CACEc,KAAK,OACLb,IAAI,6DACJD,QAAQ,KAEV,CACEc,KAAK,YACLb,IAAI,yDACJD,QAAQ,MA+BZ,OA5BAe,oBAAU,KACR,MAAMC,EAAaC,IACjB,MAAMC,EAAUL,EAASM,KAAKC,GAAOA,EAAIpB,UAAYiB,EAAMI,IAAIC,eAC3DJ,IACFP,EAAeO,EAAQJ,MACT,IAAIS,MAAML,EAAQjB,KAC1BuB,SAMV,OAFAC,SAASC,iBAAiB,UAAWV,GAE9B,KACLS,SAASE,oBAAoB,UAAWX,KAEzC,IAcDb,IAAAC,cAAA,OAAKC,UAAU,OACfF,IAAAC,cAAA,OAAKE,GAAG,eAAeD,UAAU,8CAC9BQ,EAASe,IAAIV,GACZf,IAAAC,cAACN,EAAO,CACNuB,IAAKH,EAAQlB,QACbA,QAASkB,EAAQlB,QACjBC,IAAKiB,EAAQjB,IACbC,QAASA,IAlBIF,KACnB,MAAMkB,EAAUL,EAASM,KAAKC,GAAOA,EAAIpB,UAAYA,GACjDkB,IACFP,EAAeO,EAAQJ,MACT,IAAIS,MAAML,EAAQjB,KAC1BuB,SAaajB,CAAYW,EAAQlB,aAKzCG,IAAAC,cAAA,OAAKE,GAAG,UAAUD,UAAU,4EACzBK,KCpFQmB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKnC,IAAiD,IAAhDqC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASzC,EACpEqC,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWjB,SAASkB,eAAe,SACpDC,OACHzC,IAAAC,cAACD,IAAM0C,WAAU,KACf1C,IAAAC,cAACK,EAAG,QAORoB","file":"static/js/main.57f16265.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction DrumPad({ drumKey, src, onClick }) {\r\n  const handleClick = () => {\r\n    onClick(drumKey); // Call the onClick event handler with the drumKey as argument\r\n  };\r\n\r\n  return (\r\n    <div className=\"drum-pad\" id={drumKey} onClick={handleClick}>\r\n      {drumKey}\r\n      <audio className=\"clip\" id={`${drumKey}-sound`} src={src}></audio>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DrumPad;\r\n","import React from 'react';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport DrumPad from './components/DrumPad';\n\nfunction App() {\n  const [displayText, setDisplayText] = useState('');\n  const drumpads = [\n    {\n      name:\"Heater 1\",\n      src:\"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\",\n      drumKey:\"Q\"\n    },\n    {\n      name:\"Heater 2\",\n      src:\"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\",\n      drumKey:\"W\",\n    },\n    {\n      name:\"Heater 3\",\n      src:\"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\",\n      drumKey:\"E\"\n    },\n    {\n      name:\"Heater 4\",\n      src:\"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\",\n      drumKey:\"A\"\n    },\n    {\n      name:\"Clap\",\n      src:\"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\",\n      drumKey:\"S\"\n    },\n    {\n      name:\"Open-HH\",\n      src:\"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\",\n      drumKey:\"D\"\n    },\n    {\n      name:\"Kick-n'-Hat\",\n      src:\"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\",\n      drumKey:\"Z\"\n    },\n    {\n      name:\"Kick\",\n      src:\"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\",\n      drumKey:\"X\"\n    },\n    {\n      name:\"Closed-HH\",\n      src:\"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\",\n      drumKey:\"C\"\n    },\n  ]\n  useEffect(() => {\n    const handleKey = (event) => {\n      const drumpad = drumpads.find(pad => pad.drumKey === event.key.toUpperCase());\n      if (drumpad) {\n        setDisplayText(drumpad.name);\n        const audio = new Audio(drumpad.src);\n        audio.play();\n      }\n    };\n\n    document.addEventListener('keydown', handleKey);\n\n    return () => {\n      document.removeEventListener('keydown', handleKey);\n    };\n  }, []);\n\n  \n  const handleClick = (drumKey) => {\n    const drumpad = drumpads.find(pad => pad.drumKey === drumKey);\n    if (drumpad) {\n      setDisplayText(drumpad.name);\n      const audio = new Audio(drumpad.src);\n      audio.play();\n    }\n  };\n\n  \n  return (\n    <div className=\"App\">\n    <div id=\"drum-machine\" className='flex justify-center flex-wrap w-1/4 my-10 '>\n      {drumpads.map(drumpad => (\n        <DrumPad\n          key={drumpad.drumKey}\n          drumKey={drumpad.drumKey}\n          src={drumpad.src}\n          onClick={() => handleClick(drumpad.drumKey)}\n        />\n      ))}\n    </div>\n    \n    <div id=\"display\" className=\"text-3xl font-bold underline flex w-1/3 h-96 justify-center items-center\">\n      {displayText}\n    </div>\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}